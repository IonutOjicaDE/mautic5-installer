#!/bin/bash

###############################################################################################
#####                             INSTALL MAUTIC 5 CONFIG-FILE                            #####
#####                                    BY IONUT OJICA                                   #####
#####                                    IONUTOJICA.RO                                    #####
###############################################################################################


###############################################################################################
#####                                GENERAL CONFIGURATION                                #####
###############################################################################################

MAUTIC_SUBDOMAIN='m.'   # eg: m.example.com
SENDER_EMAIL='contact@' # eg: contact@example.com

# RO: fără diactrice în nume şi prenume !!!
# EN: without special symbols in firstname and lastname
SENDER_FIRSTNAME=''     # ex: Ionut
SENDER_LASTNAME=''      # ex: Ojica

# timezone where you live in
SENDER_TIMEZONE='Europe/Bucharest'
# eg. choose between: 'Europe/London' 'Europe/Berlin' 'Europe/Bucharest'
# more timezones here: https://www.php.net/manual/en/timezones.php


###############################################################################################
#####                              INSTALLATION CONFIGURATION                             #####
###############################################################################################


# 'yes' to obtain SSL certificate
# 'test' to obtain a test certificate using --test-cert in certbot
SSL_CERTIFICATE='yes'

# 'yes' will send the email with created passwords also to SENDER_EMAIL
# any other value will not send the email to SENDER_EMAIL
SEND_PASS_TO_SENDER_EMAIL='yes'

# Commented line: will install first/main instance.
# Values from 2 to 5: install x count Mautic instance on the same server
# Has impact also on the start time of the daily Cronjobs (that run over night)
#MAUTIC_COUNT=2
#MYSQL_ROOT_PASSWORD="" # if MAUTIC_COUNT > 1 then provide also MYSQL_ROOT_PASSWORD
#ROOT_USER_PASSWORD=""  # if MAUTIC_COUNT > 1 then provide also ROOT_USER_PASSWORD

PHP_VERSION='8.2'
MAUTIC_VERSION='5.2.4'
ADMINER_VERSION='4.8.3'


###############################################################################################
#####                              NOTIFICATION CONFIGURATION                             #####
###############################################################################################


# email address of the admin, that will also receive the emails
ADMIN_EMAIL='admin@'    # eg: admin@example.com

# which email address will send the emails
FROM_EMAIL='install@'   # eg: install@example.com
# server and port to connect trough SMTP
FROM_SERVER_PORT=':587' # eg: example.com:587
# username and password for the SMTP account
FROM_USER='install@'    # eg: install@example.com
FROM_PASS=''            # eg: MfE4KrGf%fH7PsW2$


###############################################################################################
#####                                  EXTENSIONS TO ADD                                  #####
###############################################################################################

# Extensions to install via Composer (one per line, in a variable-safe block)
# Install only what you need, as some extensions add overhead.
MAUTIC_EXTENSIONS=(
  'symfony/amazon-mailer'                       # Trimite emailuri prin Amazon SES
#  'symfony/http-client'                         # Realizează apeluri HTTP externe mai eficient
#  'friendsofsymfony/oauth-server-bundle'        # Adaugă OAuth2 Server (pentru API securizat)
#  'league/oauth2-google'                        # Integrare OAuth2 cu conturi Google
#  'guzzlehttp/guzzle'                           # Client HTTP robust (util în pluginuri)
#  'php-http/message-factory'                    # Crearea de mesaje PSR-7 (cerință pentru unele API-uri)
#  'php-amqplib/php-amqplib'                     # Suport RabbitMQ (event-driven queueing)
#  'symfony/lock'                                # Gestionarea concurenței (lockuri pentru crons/taskuri)
#  'symfony/messenger'                           # Cozi de mesaje (pentru taskuri asincrone)
#  'symfony/cache'                               # Optimizare cache pentru Mautic (Redis, Memcached)
#  'monolog/monolog'                             # Logging avansat (fisiere, syslog, extern)
#  'doctrine/migrations'                         # Control fin asupra migrărilor DB (custom pluginuri)
#  'symfony/var-dumper'                          # Debugging în timpul dezvoltării
#  'symfony/debug-bundle'                        # Debugging avansat pentru dezvoltare
#  'symfony/dotenv'                              # Manipulare .env în pluginuri custom
#  'symfony/uid'                                 # Pentru a genera UUID-uri moderne
)
